import jsPDF from "jspdf";
import autoTable from "jspdf-autotable";
import Roboto from "../../public/fonts/Roboto.js";

const exportInvoice = (order) => {
  const doc = new jsPDF();

  // ƒêƒÉng k√Ω font Roboto
  doc.addFileToVFS("Roboto-Regular.ttf", Roboto);
  doc.addFont("Roboto-Regular.ttf", "Roboto", "normal");
  doc.setFont("Roboto", "normal"); // ƒê·∫£m b·∫£o d√πng ƒë√∫ng font

  // Th√™m font
  doc.addFileToVFS("Roboto-Regular.ttf", Roboto);
  doc.addFont("Roboto-Regular.ttf", "Roboto", "normal");
  doc.setFont("Roboto");

  // T√™n c·ª≠a h√†ng g√≥c tr√™n tr√°i
  doc.setFontSize(20);
  doc.text("Ebook store", 14, 15);

  // Ti√™u ƒë·ªÅ h√≥a ƒë∆°n cƒÉn gi·ªØa
  doc.setFontSize(16);
  const pageWidth = doc.internal.pageSize.width;
  const titleWidth = doc.getTextWidth("H√ìA ƒê∆†N MUA H√ÄNG");
  doc.text("H√ìA ƒê∆†N MUA H√ÄNG", (pageWidth - titleWidth) / 2, 30);

  doc.setFontSize(12);
  doc.text(`M√£ ƒë∆°n h√†ng: ${order.order_id}`, 14, 40);
  doc.text(`T√™n kh√°ch h√†ng: ${order.name}`, 14, 50);
  doc.text(`S·ªë ƒëi·ªán tho·∫°i: ${order.phone}`, 14, 60);
  doc.text(`ƒê·ªãa ch·ªâ: ${order.address}`, 14, 70);
  doc.text(`Ph∆∞∆°ng th·ª©c thanh to√°n: ${order.payment_method}`, 14, 80);
  doc.text(`Tr·∫°ng th√°i: ${order.payment_status}`, 14, 90);

  // D·ªØ li·ªáu b·∫£ng s·∫£n ph·∫©m
  const tableColumn = ["S·∫£n ph·∫©m", "S·ªë l∆∞·ª£ng", "ƒê∆°n gi√°"];
  const tableRows = order.OrderItems?.map((item) => [
    item.product_name,
    item.quantity,
    `${item.price} VND`,
  ]) || [];

  // üî• Ch·ªânh l·∫°i font cho b·∫£ng
  autoTable(doc, {
    startY: 120,
    head: [tableColumn],
    body: tableRows,
    styles: {
      font: "Roboto",
      fontStyle: "normal", // üî• B·∫Øt bu·ªôc ƒë·ªÉ kh√¥ng l·ªói font
    },
  });

  // Ki·ªÉm tra v·ªã tr√≠ k·∫øt th√∫c b·∫£ng
  const finalY = doc.lastAutoTable ? doc.lastAutoTable.finalY + 10 : 100;

  // T·ªïng ti·ªÅn
  doc.text(`T·ªïng ti·ªÅn: ${order.final_price} VND`, 14, finalY);

  // L∆∞u file PDF
  doc.save(`hoa-don-${order.order_id}.pdf`);
};

export default exportInvoice;
